➜  libft git:(master) ✗ paco
╔══════════════════════════════════════════════════════════════════════════════╗
║                Welcome to Francinette, a 42 tester framework!                ║
╚═══════════════════════╦══════════════════════════════╦═══════════════════════╝
                        ║             libft            ║
                        ╚══════════════════════════════╝
✔ Preparing framework
✔ Executing: norminette
✔ Executing: make fclean all (no bonus)
ℹ Executing: libft-war-machine (https://github.com/y3ll0w42/libft-war-machine)
--------------------------------------------------------------------------------
|                              COMPILING LIBFT                                 |
--------------------------------------------------------------------------------
rules:
all        $(NAME)       fclean       re           clean       bonus     libft.a
ok         ok            ok           ok           ok          missing   found

FUNCTION         TESTS                RESULT
ft_strlen        ✓✓✓✓✓✓               OK
ft_strlcpy       ✓✓✓✓✓                OK
ft_strlcat       ✓✓✓✗✗✗✗✗✗            KO
ft_strchr        ✓✓✓✓✓✓               OK
ft_strrchr       ✓✓✓✓✓✓✓✓             OK
ft_strncmp       ✓✓✓✓✓✓✓✓✓✓✗          KO
ft_strnstr       ✓✓✓✓✓✓✓✓✓✓           OK
ft_atoi          ✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓✓  OK

Abort: A  Bus error: B  Segmentation fault: S  Timeout: T

More information in: /nfs/homes/cmoura-p/francinette/temp/libft/war-machine/deepthought

Errors in strlcat: /nfs/homes/cmoura-p/francinette/temp/libft/war-machine/tests/Part1_functions/ft_strlcat
Test 4:
    dest[14] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 15));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test04.output):
32$
rrrrrrlorem ip^@
Your result (cat -e user_output_test04):
26$
rrrrrrlorem ip^@
Test 5:
    dest[10] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 0));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test05.output):
26$
rrrrrr^@^@^@^@a^@^@^@^@
Your result (cat -e user_output_test05):
6$
rrrrrr^@^@^@^@a^@^@^@^@
Test 6:
    dest[10] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 1));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test06.output):
27$
rrrrrr^@^@^@^@a^@^@^@^@
Your result (cat -e user_output_test06):
7$
rrrrrr^@^@^@^@a^@^@^@^@
Test 7:
    memset(dest, 'r', 15);
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 5));
    write(1, "\n", 1);
    write(1, dest, 15);
Expected (cat -e test07.output):
31$
rrrrrrrrrrrrrrr
Your result (cat -e user_output_test07):
20$
rrrrrrrrrrrrrrr
Test 8:
    dest[10] = 'a';
    ft_print_result(ft_strlcat(dest, "lorem ipsum dolor sit amet", 6));
    write(1, "\n", 1);
    write(1, dest, 15);
...

File too large. To see full report open: /nfs/homes/cmoura-p/francinette/temp/libft/war-machine/errors.log

✔ Compiling tests: libftTester (https://github.com/Tripouille/libftTester)
ℹ Testing:
ft_strlen	: 1.OK 2.OK 
ft_strlcpy	: 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 
ft_strlcat	: 1.KO 2.KO 3.KO 4.KO 5.KO 6.KO 7.OK 8.KO 9.KO 10.OK 11.OK 12.OK 13.OK 14.OK 15.OK 16.OK 17.KO 
ft_strchr	: 1.OK 2.OK 3.OK 4.OK 5.OK 
ft_strrchr	: 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 
ft_strncmp	: 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 13.OK 14.OK 15.OK 16.OK 
ft_strnstr	: 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 13.OK 14.OK 
ft_atoi		: 1.OK 2.OK 3.OK 4.OK 5.OK 6.OK 7.OK 8.OK 9.OK 10.OK 11.OK 12.OK 13.OK 14.OK 15.OK 16.OK 17.OK 


Errors in:

For /nfs/homes/cmoura-p/francinette/tests/libft/Tripouille/tests/ft_strlcat_test.cpp:
KO  21: 	/* 1 */ check(ft_strlcat(dest, src, 0) == strlen(src) && !strcmp(dest, "B")); showLeaks();
KO  23: 	/* 2 */ check(ft_strlcat(dest, src, 1) == 10 && !strcmp(dest, "B")); showLeaks();
KO  25: 	/* 3 */ check(ft_strlcat(dest, src, 3) == 3 + strlen(src) && !strcmp(dest, "BBBB")); showLeaks();
KO  26: 	/* 4 */ check(ft_strlcat(dest, src, 6) == 13 && !strcmp(dest, "BBBBA")); showLeaks();
KO  28: 	/* 5 */ check(ft_strlcat(dest, src, -1) == 14 && !strcmp(dest, "CCCCCAAAAAAAAA")); showLeaks();
KO  30: 	/* 6 */ check(ft_strlcat(dest, src, 17) == 24 && !strcmp(dest, "CCCCCCCCCCCCCCCA")); showLeaks();
KO  34: 	/* 8 */ check(ft_strlcat(dest, src, 5) == strlen(src) + 5 && !strcmp(dest, "1111111111")); showLeaks();
KO  36: 	/* 9 */ check(ft_strlcat(dest, src, 5) == strlen(src) + 5 && !strcmp(dest, "1111111111")); showLeaks();
KO  52: 	/* 17 */ check(ft_strlcat(dest, "123", 0) == 3 && !strcmp(dest, "")); showLeaks();

✔ Compiling tests: libft-unit-test (https://github.com/alelievr/libft-unit-test)
ℹ Testing:
ft_strlen       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strlcpy      : [OK] [OK] [OK] [OK] [OK] [OK] [NO CRASH] 
[no crash]: your strlcpy doe not segfault when null parameter is sent

ft_strlcat      : [OK] [FAILED] [OK] [OK] [OK] [OK] [OK] [OK] [CRASH] [FAILED] [OK] [NO CRASH] 
[fail]: your strlcat does not work with basic input
[crash]: your strlcat crash because it read too many bytes or attempt to write on buff !
[fail]: your strlcat return value is false
[no crash]: your strlcat does not segfault when null parameter is sent

ft_strchr       : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strrchr      : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_strncmp      : [OK] [OK] [OK] [OK] [OK] [OK] [FAILED] [OK] [OK] [FAILED] [OK] [OK] [OK] [OK] 
[fail]: your strncmp does not cast in unsigned char the diff
[fail]: your strncmp does not work with non ascii chars

ft_strnstr      : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_atoi         : [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 

[no crash]: your strlcpy doe not segfault when null parameter is sent
 Test code:
 	ft_strlcpy(((void*)0), ((void*)0), 10);
 
 
 [fail]: your strlcat does not work with basic input
 Test code:
 	char *str = "the cake is a lie !\0I'm hidden lol\r\n";
 	char buff1[0xF00] = "there is no stars in the sky";
 	char buff2[0xF00] = "there is no stars in the sky";
 	size_t max = strlen("the cake is a lie !\0I'm hidden lol\r\n") + 4;
 	size_t r1 = strlcat(buff1, str, max);
 	size_t r2 = ft_strlcat(buff2, str, max);
 
 	if (r1 != r2)
 		exit(TEST_FAILED);
 	char s1[4] = "";
 	char s2[4] = "";
 	r1 = strlcat(s1, "thx to ntoniolo for this test !", 4)
 		;
 	r2 = ft_strlcat(s2, "thx to ntoniolo for this test !", 4)
 		;
 	if (r1 != r2)
 		exit(TEST_FAILED);
 	exit(TEST_SUCCESS);
 
 Diffs:
      strlcat: |42|
   ft_strlcat: |51|
 
 [crash]: your strlcat crash because it read too many bytes or attempt to write on buff !
 Test code:
 	const size_t size = 10;
 	char *str = electric_alloc(size);
 	char *buff = electric_alloc(size);
 
 	strcpy(buff, "AB");
 	strcpy(str, "CDEFGHI");
 	ft_strlcat(buff, str, 10);
 	exit(TEST_SUCCESS);
 
 
 [fail]: your strlcat return value is false
 Test code:
 	char *src = "aaa";
 	char dst1[20];
 	char dst2[20];
 	int ret1;
 	int ret2;
 
...

File too large. To see full report open: /nfs/homes/cmoura-p/francinette/temp/libft/alelievr/result.log

✔ Compiling tests: fsoares (my own)
ℹ Testing:
ft_strlen       : OK
ft_strlcpy      : OK
ft_strlcat      : KO
ft_strchr       : OK
ft_strrchr      : KO
ft_strncmp      : KO
ft_strnstr      : OK
ft_atoi         : OK

Errors found:
For ft_strlcat, in /nfs/homes/cmoura-p/francinette/tests/libft/fsoares/test_strlcat.c:

Error in test 1: ft_strlcat("pqrstuvwxyz", "abcd", 0): expected: 4, yours: 11
Error in test 2: ft_strlcat("pqrstuvwxyz", "abcd", 1): expected: 5, yours: 12
Error in test 3: ft_strlcat("pqrstuvwxyz", "abcd", 2): expected: 6, yours: 13
Error in test 4: ft_strlcat("pqrstuvwxyz", "abcd", 3): expected: 7, yours: 14
Error in test 5: ft_strlcat("pqrstuvwxyz", "abcd", 4): expected: 8, yours: 15
Error in test 6: ft_strlcat("pqrstuvwxyz", "abcd", 5): expected: 9, yours: 16
Error in test 7: ft_strlcat("pqrstuvwxyz", "abcd", 6): expected: 10, yours: 17
Error in test 8: ft_strlcat("pqrstuvwxyz", "abcd", 7): expected: 11, yours: 18
Error in test 9: ft_strlcat("pqrstuvwxyz", "abcd", 20): expected: 15, yours: 16
Error in test 10: ft_strlcat("pqrs", "abcdefghi", 10): expected: 13, yours: 9
Error in test 11: ft_strlcat("pqrs", "abcdefghi", 11): expected: 13, yours: 14
Error in test 12: ft_strlcat("pqrs", "abcdefghi", 12): expected: 13, yours: 14
Error in test 13: ft_strlcat("pqrs", "abcdefghi", 13): expected: 13, yours: 14
Error in test 14: ft_strlcat("pqrs", "abcdefghi", 14): expected: 13, yours: 14
Error in test 15: ft_strlcat("pqrs", "abcdefghi", 15): expected: 13, yours: 14
Error in test 16: ft_strlcat("pqrs", "abcdefghi", 16): expected: 13, yours: 14
Error in test 17: ft_strlcat("pqrs", "abcdefghi", 17): expected: 13, yours: 14

For ft_strrchr, in /nfs/homes/cmoura-p/francinette/tests/libft/fsoares/test_strrchr.c:

Error in test 6: ft_strrchr(0x563fd7d49021: "teste", 1024: '\0'): expected: 0x563fd7d49026, yours: (nil)

For ft_strncmp, in /nfs/homes/cmoura-p/francinette/tests/libft/fsoares/test_strncmp.c:

Error in test 19: ft_strncmp("abcdef", "abc\375xx", 5): 
expected sign: -1 (value: -153), yours sign: 1 (value: 103)




Summary: no bonus

Missing functions: isalpha, isdigit, isalnum, isascii, isprint, memset, bzero, memcpy, memmove, toupper, tolower, memchr, memcmp, calloc, strdup, substr, strjoin, strtrim, split, itoa, strmapi, striteri, putchar_fd, putstr_fd, putendl_fd, putnbr_fd

Failed tests: ft_strlcat, strncmp, strlcat, strlcpy, strrchr

Passed tests: strlen, strchr, strnstr, atoi

